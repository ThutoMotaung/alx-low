# Makefile for building the 'school' executable

# Compiler
CC = gcc

# Source files
SRC = main.c school.c

# Object files
OBJ = $(SRC:.c=.o)

# Name of the executable
NAME = school

# Program to delete files
RM = /bin/rm -f

# Compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Rule for building the executable
all: $(NAME)

$(NAME): $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

# Rule for cleaning Emacs and Vim temporary files along with the executable
clean:
	$(RM) $(NAME) *~ \#*\# clean

# Rule for cleaning object files
oclean:
	$(RM) $(OBJ) oclean

# Rule for cleaning all Emacs and Vim temporary files, the executable, and object files
fclean: clean oclean
	$(RM) fclean

# Rule to force recompilation of all source files
re: fclean all

# Check if header file m.h exists
ifeq ($(wildcard m.h),)
$(error Header file m.h is missing)
endif
